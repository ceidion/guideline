★：要検討

単体テスト
********************************************************************************

.. only:: html

 .. contents:: 目次
    :local:

単体テスト概要
================================================================================

はじめに
--------------------------------------------------------------------------------

| 単体テスト章は、Macchinetta Server Framework 適用システムにおける単体テスト実装方法の参考例を提示するものであり、
  テスト技法を適用したテスト方針を示すものではないため、システムの品質を保証するものではない。
| Macchinetta Server Framework 適用システムの単体テスト実装に当たり本章が有益なものになることを期待する。
| 
| 本章では、開発ガイドラインの\ :ref:`ApplicationLayering`\ に記載しているコンポーネント単位で
  JUnitを使用したテスト実装方法および実行方法の例を提示する。
  なお、一般的に「単体テスト」や「ユニットテスト」という用語はテスト計画、テスト設計（テスト項目・テストケース作成）
  テスト観点（ホワイトボックス、ブラックボックス）などを含めた意味で使用されるが、
  本章で解説するテストは実装方法の参考例であり、スコープが異なることに注意されたい。

対象読者
--------------------------------------------------------------------------------

本章はソフトウェア開発および単体テスト実施経験のあるアーキテクトやプログラマ向けに書かれており、
以下の知識・経験があることを前提としている。

* Spring FrameworkのDIやAOPに関する基礎的な知識がある
* Servlet/JSPを使用してWebアプリケーションを開発したことがある
* SQLに関する知識がある
* Mavenを使用してWebアプリケーションをビルドしたことがある(Mavenでのテスト実行方法の章の内容次第)
* JUnitを使用した単体テストを行ったことがある
* 単体テスト項目を抽出できる


単体テストの動作検証環境★
--------------------------------------------------------------------------------

* Application Server

* RDBMS

* JDK

* IDE

* サンプルアプリ


本ガイドラインにおける一般的な試験観点の考え方★
--------------------------------------------------------------------------------

本ガイドラインにおける単体テストのスコープは、開発ガイドラインの\ :ref:`ApplicationLayering`\ に記載している
コンポーネントに対する単体テストの実装方法および実行方法とする。

* 正常系
* 異常系

「単体テストの実装」節で、例外に対してのテスト項目を記載する場合は必要

（レイヤーごとに試験する意図）

各レイヤーごとにテストを実装することで、テスト済みのレイヤー層をスタブ/ドライブ化せずに試験できるというメリットがある。
また、開発ガイドラインでも各レイヤーごとに実装方法を記述しているため、本章でもそれに倣うものとする。

